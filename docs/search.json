[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sts-blog",
    "section": "",
    "text": "palmer.qmd\n\n\n\n\n\n\n\n\n\n\n\n신태선,신인철,신지원\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 6, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 3, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/parmer/palmer.html",
    "href": "posts/parmer/palmer.html",
    "title": "palmer.qmd",
    "section": "",
    "text": "데이터 불러오기\n\n\nimport pandas as pd\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\npenguins.info()\ndf=penguins # 편의상 df 변수 사용.\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n\n\n\n데이터 분석을 위해 df 에 어떤 데이터가 있는지 확인한다.\n\n\ndf\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n\n종과 colomm에 따른 데이터 분류\n\n\n각 종별 서식지 분포\n각 종별 테어난 연도 분포\n각 종별 부리의 길이\n각 종별 성별\n각 종별 지느러미\n각 종별 무게\n\n담당 자: 신태선\n\n종의 종류와 개수를 파악한다.\n\n\n# 종의 종류\nunique_species = df['species'].unique()\nprint(f\"Species의 종류: {unique_species}\")\n# 종의 개수 \nnum_species = df['species'].nunique()\nprint(f\"Species의 종류 개수: {num_species}\")\n\nSpecies의 종류: ['Adelie' 'Gentoo' 'Chinstrap']\nSpecies의 종류 개수: 3\n\n\n\n총 3개의 종의 Data Fram을 나누어 저장한다.\n\n\nadelie = df[df['species']== 'Adelie']\nchinstrap = df[df['species']== 'Chinstrap']\ngentoo = df[df['species']== 'Gentoo']\n\n\n각 종별 서식지 분포\n\n\nadelie_island_counts = adelie['island'].value_counts()\nadelie_island_counts.name = 'Adelie_island'\n\nchinstrap_island_counts = chinstrap['island'].value_counts()\nchinstrap_island_counts.name = 'Chinstrap_island'\n\ngentoo_island_counts = gentoo['island'].value_counts()\ngentoo_island_counts.name = 'Gentoo_island'\n\n# 병합\npenguins_island_df = pd.concat([adelie_island_counts, chinstrap_island_counts, gentoo_island_counts], axis=1).fillna(0)\npenguins_island_df\n\n\n\n\n\n\n\n\nAdelie_island\nChinstrap_island\nGentoo_island\n\n\nisland\n\n\n\n\n\n\n\nDream\n56\n68.0\n0.0\n\n\nTorgersen\n52\n0.0\n0.0\n\n\nBiscoe\n44\n0.0\n124.0\n\n\n\n\n\n\n\n\nAdelie는 152마리 중 Dream에 56 마리, Torgersen에 52마리, Biscoe에 44마리 서식중이다.\nChinstrap은 68마리 중 Dream에서만 68마리 서식중이다.\nGentoo는 124마리 중 Biscoe 지역에서만 124마리 서식중이다.\n\n\n추론\nAdelie 펭귄은 가장 넓은 환경에서 생존이 가능하므로, 다양한 환경 변화에도 적응할 가능성이 높다.\n\n\n각 종별 태어난 연도 분포\n\n\nadelie_year_counts = adelie['year'].value_counts()\nadelie_year_counts.name = 'Adelie_year'\n\ngentoo_year_counts = gentoo['year'].value_counts()\ngentoo_year_counts.name = 'Gentoo_year'\n\nchinstrap_year_counts = chinstrap['year'].value_counts()\nchinstrap_year_counts.name = 'Chinstrap_year'\n\npenguins_year_df = pd.concat([adelie_year_counts, gentoo_year_counts, chinstrap_year_counts], axis=1)\npenguins_year_df\n\n\n\n\n\n\n\n\nAdelie_year\nGentoo_year\nChinstrap_year\n\n\nyear\n\n\n\n\n\n\n\n2009\n52\n44\n24\n\n\n2007\n50\n34\n26\n\n\n2008\n50\n46\n18\n\n\n\n\n\n\n\n\n추론\n2007~2009년 사이에\nAdelie는 출생 개체 수가 비슷하다. 환경적 요인의 변화가 적었던것 같다.\nGentoo는 2007년 출생 개체 수가 가장 낮고, 다른 년도와 비교했을때 차이가 10이상으로 크다. 2007년 출생을 결정하는 환경적 요인 변화가 컸을 가능성이 있다.\nChinstrap은 2008년 출생 개체 수가 가장 낮고, 다른 년도와 비교했을 때 차이가 크다. 2008년 출생을 결정하는 환경적인 요인 변화가 컸을 가능성이 있다."
  },
  {
    "objectID": "posts/parmer/palmer.html#문제-각-펭귄-종별-특징-알아내기.",
    "href": "posts/parmer/palmer.html#문제-각-펭귄-종별-특징-알아내기.",
    "title": "palmer.qmd",
    "section": "",
    "text": "데이터 불러오기\n\n\nimport pandas as pd\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\npenguins.info()\ndf=penguins # 편의상 df 변수 사용.\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n\n\n\n데이터 분석을 위해 df 에 어떤 데이터가 있는지 확인한다.\n\n\ndf\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n\n종과 colomm에 따른 데이터 분류\n\n\n각 종별 서식지 분포\n각 종별 테어난 연도 분포\n각 종별 부리의 길이\n각 종별 성별\n각 종별 지느러미\n각 종별 무게\n\n담당 자: 신태선\n\n종의 종류와 개수를 파악한다.\n\n\n# 종의 종류\nunique_species = df['species'].unique()\nprint(f\"Species의 종류: {unique_species}\")\n# 종의 개수 \nnum_species = df['species'].nunique()\nprint(f\"Species의 종류 개수: {num_species}\")\n\nSpecies의 종류: ['Adelie' 'Gentoo' 'Chinstrap']\nSpecies의 종류 개수: 3\n\n\n\n총 3개의 종의 Data Fram을 나누어 저장한다.\n\n\nadelie = df[df['species']== 'Adelie']\nchinstrap = df[df['species']== 'Chinstrap']\ngentoo = df[df['species']== 'Gentoo']\n\n\n각 종별 서식지 분포\n\n\nadelie_island_counts = adelie['island'].value_counts()\nadelie_island_counts.name = 'Adelie_island'\n\nchinstrap_island_counts = chinstrap['island'].value_counts()\nchinstrap_island_counts.name = 'Chinstrap_island'\n\ngentoo_island_counts = gentoo['island'].value_counts()\ngentoo_island_counts.name = 'Gentoo_island'\n\n# 병합\npenguins_island_df = pd.concat([adelie_island_counts, chinstrap_island_counts, gentoo_island_counts], axis=1).fillna(0)\npenguins_island_df\n\n\n\n\n\n\n\n\nAdelie_island\nChinstrap_island\nGentoo_island\n\n\nisland\n\n\n\n\n\n\n\nDream\n56\n68.0\n0.0\n\n\nTorgersen\n52\n0.0\n0.0\n\n\nBiscoe\n44\n0.0\n124.0\n\n\n\n\n\n\n\n\nAdelie는 152마리 중 Dream에 56 마리, Torgersen에 52마리, Biscoe에 44마리 서식중이다.\nChinstrap은 68마리 중 Dream에서만 68마리 서식중이다.\nGentoo는 124마리 중 Biscoe 지역에서만 124마리 서식중이다.\n\n\n추론\nAdelie 펭귄은 가장 넓은 환경에서 생존이 가능하므로, 다양한 환경 변화에도 적응할 가능성이 높다.\n\n\n각 종별 태어난 연도 분포\n\n\nadelie_year_counts = adelie['year'].value_counts()\nadelie_year_counts.name = 'Adelie_year'\n\ngentoo_year_counts = gentoo['year'].value_counts()\ngentoo_year_counts.name = 'Gentoo_year'\n\nchinstrap_year_counts = chinstrap['year'].value_counts()\nchinstrap_year_counts.name = 'Chinstrap_year'\n\npenguins_year_df = pd.concat([adelie_year_counts, gentoo_year_counts, chinstrap_year_counts], axis=1)\npenguins_year_df\n\n\n\n\n\n\n\n\nAdelie_year\nGentoo_year\nChinstrap_year\n\n\nyear\n\n\n\n\n\n\n\n2009\n52\n44\n24\n\n\n2007\n50\n34\n26\n\n\n2008\n50\n46\n18\n\n\n\n\n\n\n\n\n추론\n2007~2009년 사이에\nAdelie는 출생 개체 수가 비슷하다. 환경적 요인의 변화가 적었던것 같다.\nGentoo는 2007년 출생 개체 수가 가장 낮고, 다른 년도와 비교했을때 차이가 10이상으로 크다. 2007년 출생을 결정하는 환경적 요인 변화가 컸을 가능성이 있다.\nChinstrap은 2008년 출생 개체 수가 가장 낮고, 다른 년도와 비교했을 때 차이가 크다. 2008년 출생을 결정하는 환경적인 요인 변화가 컸을 가능성이 있다."
  },
  {
    "objectID": "posts/parmer/palmer.html#각-종별-부리의-길이",
    "href": "posts/parmer/palmer.html#각-종별-부리의-길이",
    "title": "palmer.qmd",
    "section": "각 종별 부리의 길이",
    "text": "각 종별 부리의 길이"
  },
  {
    "objectID": "posts/parmer/palmer.html#각-종별-성별",
    "href": "posts/parmer/palmer.html#각-종별-성별",
    "title": "palmer.qmd",
    "section": "각 종별 성별",
    "text": "각 종별 성별"
  },
  {
    "objectID": "posts/parmer/palmer.html#bill-length-부리의길이-bill-depth-부리-깊이",
    "href": "posts/parmer/palmer.html#bill-length-부리의길이-bill-depth-부리-깊이",
    "title": "palmer.qmd",
    "section": "bill length = 부리의길이 bill depth = 부리 깊이",
    "text": "bill length = 부리의길이 bill depth = 부리 깊이"
  },
  {
    "objectID": "posts/parmer/palmer.html#펭귄-성별에-따라-개체수-구하기",
    "href": "posts/parmer/palmer.html#펭귄-성별에-따라-개체수-구하기",
    "title": "palmer.qmd",
    "section": "펭귄 성별에 따라 개체수 구하기",
    "text": "펭귄 성별에 따라 개체수 구하기\n\nnan_penguins = penguins['sex'].isna().sum()\nfemale_adelie = penguins.loc[(penguins['species'] == 'Adelie') & (penguins['sex']==\"female\")].shape[0]\nmale_adelie = penguins.loc[(penguins['species'] == 'Adelie') & (penguins['sex']==\"male\")].shape[0]\nfemale_gentoo = penguins.loc[(penguins['species'] == 'Gentoo') & (penguins['sex']==\"female\")].shape[0]\nmale_gentoo = penguins.loc[(penguins['species'] == 'Gentoo') & (penguins['sex']==\"male\")].shape[0]\nfemale_chinstrap = penguins.loc[(penguins['species'] == 'Chinstrap') & (penguins['sex']==\"female\")].shape[0]\nmale_chinstrap = penguins.loc[(penguins['species'] == 'Chinstrap') & (penguins['sex']==\"male\")].shape[0]"
  },
  {
    "objectID": "posts/parmer/palmer.html#개체수-print함수-이용하여-정리하기",
    "href": "posts/parmer/palmer.html#개체수-print함수-이용하여-정리하기",
    "title": "palmer.qmd",
    "section": "개체수 print함수 이용하여 정리하기",
    "text": "개체수 print함수 이용하여 정리하기\n\n#각 종의 암컷, 수컷의 개체수\nprint(\"Adelie 암컷의 수 : \",female_adelie,'Adelie 수컷의 수 : ',male_adelie, 'Gentoo 암컷의 수 : ',female_gentoo,\n      'Gentoo 수컷의 수 : ', male_gentoo, 'Chinstrap 암컷의 수 :', female_chinstrap, 'Chinstrap 수컷의 수 : ' ,male_chinstrap\n      ,'구별불가 펭귄의 수 : ', nan_penguins)\n\nAdelie 암컷의 수 :  73 Adelie 수컷의 수 :  73 Gentoo 암컷의 수 :  58 Gentoo 수컷의 수 :  61 Chinstrap 암컷의 수 : 34 Chinstrap 수컷의 수 :  34 구별불가 펭귄의 수 :  11\n\n\n\n결론 : Adelie, gentoo, chinstrap순으로 펭귄 숫자가 많았고 모든펭귄에서 동등한 성비를 가졌다."
  },
  {
    "objectID": "posts/parmer/palmer.html#종별-부리-깊이-구분짓기",
    "href": "posts/parmer/palmer.html#종별-부리-깊이-구분짓기",
    "title": "palmer.qmd",
    "section": "종별 부리 깊이 구분짓기",
    "text": "종별 부리 깊이 구분짓기\n\n#종별 구분짓기 A는 아델리\nadelie = penguins.loc[(penguins['species'] == 'Adelie'),['bill_depth_mm']]\ngentoo = penguins.loc[(penguins['species'] == 'Gentoo'),['bill_depth_mm']]\nchinstrap = penguins.loc[(penguins['species'] == 'Chinstrap'),['bill_depth_mm']]\nadelie_d =  adelie.describe()\ngentoo_d = gentoo.describe()\nchinstrap_d = chinstrap.describe()"
  },
  {
    "objectID": "posts/parmer/palmer.html#describe이용하여-부리깊이-구하기",
    "href": "posts/parmer/palmer.html#describe이용하여-부리깊이-구하기",
    "title": "palmer.qmd",
    "section": ".describe()이용하여 부리깊이 구하기",
    "text": ".describe()이용하여 부리깊이 구하기\n\nadelie_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']\ngentoo_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']\nchinstrap_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']\n\n\nadelie_d.rename(columns={'bill_depth_mm': '부리깊이'})\n\n\n\n\n\n\n\n\n부리깊이\n\n\n\n\n표본개수\n151.000000\n\n\n평균\n18.346358\n\n\n표준편차\n1.216650\n\n\n최솟값\n15.500000\n\n\n25%\n17.500000\n\n\n50%\n18.400000\n\n\n75%\n19.000000\n\n\n최대값\n21.500000\n\n\n\n\n\n\n\n\ngentoo_d.rename(columns={'bill_depth_mm': '부리깊이'})\n\n\n\n\n\n\n\n\n부리깊이\n\n\n\n\n표본개수\n123.000000\n\n\n평균\n14.982114\n\n\n표준편차\n0.981220\n\n\n최솟값\n13.100000\n\n\n25%\n14.200000\n\n\n50%\n15.000000\n\n\n75%\n15.700000\n\n\n최대값\n17.300000\n\n\n\n\n\n\n\n\nchinstrap_d.rename(columns={'bill_depth_mm': '부리깊이'})\n\n\n\n\n\n\n\n\n부리깊이\n\n\n\n\n표본개수\n68.000000\n\n\n평균\n18.420588\n\n\n표준편차\n1.135395\n\n\n최솟값\n16.400000\n\n\n25%\n17.500000\n\n\n50%\n18.450000\n\n\n75%\n19.400000\n\n\n최대값\n20.800000\n\n\n\n\n\n\n\n\n결론 : chinstrap 펭귄이 평균 18.42mm으로 가장 깊은 부리를 가졌고 gentoo 펭귄이 14.98mm로 가장 얕은 부리를 가졌다"
  },
  {
    "objectID": "posts/parmer/palmer.html#각-종별-지느러미-분석",
    "href": "posts/parmer/palmer.html#각-종별-지느러미-분석",
    "title": "palmer.qmd",
    "section": "각 종별 지느러미 분석",
    "text": "각 종별 지느러미 분석\n\n# flipper_length_mm\n\n# 'flipper_length_mm' 컬럼에 대한 describe() 결과\ng_flipper_desc = gentoo['flipper_length_mm'].describe()\na_flipper_desc = adelie['flipper_length_mm'].describe()\nc_flipper_desc = chinstrap['flipper_length_mm'].describe()\n\n# 평균, 최대값, 최소값 추출\nmean_val = g_flipper_desc['mean']\nmax_val = g_flipper_desc['max']\nmin_val = g_flipper_desc['min']\n\nmean_val_a = a_flipper_desc['mean']\nmax_val_a = a_flipper_desc['max']\nmin_val_a = a_flipper_desc['min']\n\nmean_val_c = c_flipper_desc['mean']\nmax_val_c = c_flipper_desc['max']\nmin_val_c = c_flipper_desc['min']\n\n# gentoo\nprint(f\"Gentoo의 flipper_length의 평균: {mean_val}, 최대값: {max_val}, 최소값: {min_val}\")\n\n# adelie\nprint(f\"Adelie의 flipper_length의 평균: {mean_val_a}, 최대값: {max_val_a}, 최소값: {min_val_a}\")\n\n# chinstrap\nprint(f\"Chinstrap의 flipper_length의 평균: {mean_val_c}, 최대값: {max_val_c}, 최소값: {min_val_c}\")\n\nGentoo의 flipper_length의 평균: 217.1869918699187, 최대값: 231.0, 최소값: 203.0\nAdelie의 flipper_length의 평균: 189.95364238410596, 최대값: 210.0, 최소값: 172.0\nChinstrap의 flipper_length의 평균: 195.8235294117647, 최대값: 212.0, 최소값: 178.0\n\n\n\n\n\n\nGentoo\nAdelie\nChinstrap\n\n\n\n\n평균 지느러미 길이\n217.187\n189.954\n195.824\n\n\n최대 지느러미 길이\n231\n210\n212\n\n\n최소 지느러미 길이\n203\n172\n178\n\n\n\n\n지느러미 분석 결과\n\n평균적으로 보았을때, Gentoo가 보통 가장 긴 지느러미 길이를 가지고 있다.\n최대 지느러미 길이 역시 Gentoo가 가지고 있다.\n가장 짧은 지느러미 길이를 가지고 있는 종은 Adelie이다."
  },
  {
    "objectID": "posts/parmer/palmer.html#각-종별-몸무게-분석",
    "href": "posts/parmer/palmer.html#각-종별-몸무게-분석",
    "title": "palmer.qmd",
    "section": "각 종별 몸무게 분석",
    "text": "각 종별 몸무게 분석\n\n# body_mass_g\ng_body_desc = gentoo['body_mass_g'].describe()\na_body_desc = adelie['body_mass_g'].describe()\nc_body_desc = chinstrap['body_mass_g'].describe()\n\n# 평균, 최대값, 최소값 추출\nmean_val = g_body_desc['mean']\nmax_val = g_body_desc['max']\nmin_val = g_body_desc['min']\n\nmean_val_a = a_body_desc['mean']\nmax_val_a = a_body_desc['max']\nmin_val_a = a_body_desc['min']\n\nmean_val_c = c_body_desc['mean']\nmax_val_c = c_body_desc['max']\nmin_val_c = c_body_desc['min']\n\n# gentoo\nprint(f\"Gentoo의 body_mass의 평균: {mean_val}, 최대값: {max_val}, 최소값: {min_val}\")\n\n# adelie\nprint(f\"Adelie의 body_mass의 평균: {mean_val_a}, 최대값: {max_val_a}, 최소값: {min_val_a}\")\n\n# chinstrap\nprint(f\"Chinstrap의 body_mass의 평균: {mean_val_c}, 최대값: {max_val_c}, 최소값: {min_val_c}\")\n\nGentoo의 body_mass의 평균: 5076.016260162602, 최대값: 6300.0, 최소값: 3950.0\nAdelie의 body_mass의 평균: 3700.662251655629, 최대값: 4775.0, 최소값: 2850.0\nChinstrap의 body_mass의 평균: 3733.0882352941176, 최대값: 4800.0, 최소값: 2700.0\n\n\n\n\n\n\nGentoo\nAdelie\nChinstrap\n\n\n\n\n평균 몸무게\n5076.016\n3700.662\n3733.088\n\n\n최대 몸무게\n6300\n4775\n4800\n\n\n최소 몸무게\n3950\n2850\n2700\n\n\n\n\n몸무게 분석 결과\n\n평균,최대,최소 몸무게를 다 비교해보았을때, 가장 무거운 무게를 가진 종은 Gentoo 종이다.\nChinstrap 종이 가장 가벼운 몸무게를 가지고 있는 것을 알 수 있다."
  }
]